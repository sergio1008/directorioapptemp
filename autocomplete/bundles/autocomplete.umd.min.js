!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("rxjs/operators"),require("@angular/core"),require("@angular/common/http"),require("@angular/material"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("autocomplete",["exports","rxjs/operators","@angular/core","@angular/common/http","@angular/material","@angular/forms","@angular/common"],o):o(t.autocomplete={},t.rxjs.operators,t.ng.core,t.ng.common.http,t.ng.material,t.ng.forms,t.ng.common)}(this,function(t,e,o,r,a,i,n){"use strict";var l=function(){function t(){this.seleccion=new o.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.ngOnChanges=function(t){var o=this;t.genericoAutocompletar&&this.genericoAutocompletar&&(this.formulario.controls[this.label].validator(this.formulario.controls[this.label])?this.requerido=this.formulario.controls[this.label].validator(this.formulario.controls[this.label]).required:this.requerido=!1,this.DatosFiltrados=this.formulario.get(this.label).valueChanges.pipe(e.startWith(""),e.map(function(t){return"string"==typeof t?t:t[o.genericoAutocompletar.datoMostrar]}),e.map(function(t){return t?o.filtrarDato(t):o.genericoAutocompletar.datos})),this.genericoAutocompletar&&!0===this.genericoAutocompletar.deshabilitar&&this.formulario.controls[this.label].disable(),this.genericoAutocompletar&&this.genericoAutocompletar.idPrecargado&&this.filtrarData())},t.prototype.mostrarDato=function(t){return t?t[this.genericoAutocompletar.datoMostrar]:undefined},t.prototype.filtrarDato=function(o){var e=this;if(this.genericoAutocompletar.datos)return this.genericoAutocompletar.datos.filter(function(t){return 0===t[e.genericoAutocompletar.datoMostrar].toLowerCase().indexOf(o.toLowerCase())})},t.prototype.filtrarData=function(){var o=this,t=this.genericoAutocompletar.datos;if(t&&this.genericoAutocompletar){var e=t.find(function(t){return t[o.genericoAutocompletar.filtroPrecargado]==o.genericoAutocompletar.idPrecargado});this.formulario.get(this.label).setValue(e)}},t.prototype.seleccionoOpcion=function(t){this.seleccion.emit(t)},t.decorators=[{type:o.Component,args:[{selector:"lib-autocomplete",template:'<div [formGroup]="formulario">\r\n  <mat-form-field style="width: 100%;" appearance="outline">\r\n    <mat-label>{{genericoAutocompletar?.placeholder}}</mat-label>\r\n    <input matInput type="text" [matAutocomplete]="dato" [formControlName]="label" [required]="requerido" \r\n    [placeholder]="genericoAutocompletar?.placeholder">\r\n    <mat-autocomplete autoActiveFirstOption #dato="matAutocomplete" [displayWith]="mostrarDato.bind(this)" (optionSelected)="seleccionoOpcion(formulario.value[label])">\r\n      <mat-option *ngFor="let dato of DatosFiltrados | async" [value]="dato">\r\n        {{dato[this.genericoAutocompletar.datoMostrar]}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</div>',styles:[""]}]}],t.ctorParameters=function(){return[]},t.propDecorators={genericoAutocompletar:[{type:o.Input}],formulario:[{type:o.Input}],label:[{type:o.Input}],seleccion:[{type:o.Output}]},t}(),u=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{declarations:[l],imports:[n.CommonModule,r.HttpClientModule,i.ReactiveFormsModule,a.MatSelectModule,a.MatFormFieldModule,a.MatInputModule,a.MatAutocompleteModule],exports:[l]}]}],t}();t.AutocompleteComponent=l,t.AutocompleteModule=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=autocomplete.umd.min.js.map