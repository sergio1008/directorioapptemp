{"version":3,"sources":["ng://autocomplete/lib/componentes/autocomplete/autocomplete.component.ts","ng://autocomplete/lib/autocomplete.module.ts"],"names":["AutocompleteComponent","this","seleccion","EventEmitter","prototype","ngOnInit","ngOnChanges","changes","_this","genericoAutocompletar","formulario","controls","label","validator","requerido","required","DatosFiltrados","get","valueChanges","pipe","startWith","map","value","datoMostrar","Nombre","filtrarDato","datos","deshabilitar","disable","idPrecargado","filtrarData","mostrarDato","dato","undefined","val","filter","option","toLowerCase","indexOf","cargar","find","filtroPrecargado","setValue","seleccionoOpcion","emit","Component","args","selector","template","Input","Output","AutocompleteModule","NgModule","declarations","imports","CommonModule","HttpClientModule","ReactiveFormsModule","MatSelectModule","MatFormFieldModule","MatInputModule","MatAutocompleteModule","exports"],"mappings":"+jBAAA,IAAAA,EAAA,WAaE,SAAAA,IAKUC,KAAAC,UAAY,IAAIC,EAAAA,aA2D5B,OAvDEH,EAAAI,UAAAC,SAAA,aAIAL,EAAAI,UAAAE,YAAA,SAAYC,GAAZ,IAAAC,EAAAP,KACMM,EAA+B,uBAC7BN,KAAKQ,wBACJR,KAAKS,WAAWC,SAASV,KAAKW,OAAOC,UAAUZ,KAAKS,WAAWC,SAASV,KAAKW,QAC9EX,KAAKa,UAAYb,KAAKS,WAAWC,SAASV,KAAKW,OAAOC,UAAUZ,KAAKS,WAAWC,SAASV,KAAKW,QAAQG,SAEtGd,KAAKa,WAAY,EAGnBb,KAAKe,eAAiBf,KAAKS,WAAWO,IAAIhB,KAAKW,OAAOM,aAAaC,KACjEC,EAAAA,UAAwB,IACxBC,EAAAA,IAAG,SAACC,GAAS,MAAiB,iBAAVA,EAAqBA,EAAQA,EAAMd,EAAKC,sBAAsBc,eAClFF,EAAAA,IAAG,SAACG,GAAU,OAAAA,EAAShB,EAAKiB,YAAYD,GAAUhB,EAAKC,sBAAsBiB,SAG3EzB,KAAKQ,wBACwC,IAA5CR,KAAKQ,sBAAsBkB,cAC5B1B,KAAKS,WAAWC,SAASV,KAAKW,OAAOgB,UAIrC3B,KAAKQ,uBAAyBR,KAAKQ,sBAAsBoB,cAC3D5B,KAAK6B,gBAOb9B,EAAAI,UAAA2B,YAAA,SAAYC,GACV,OAAOA,EAAOA,EAAK/B,KAAKQ,sBAAsBc,aAAeU,WAG/DjC,EAAAI,UAAAqB,YAAA,SAAYS,GAAZ,IAAA1B,EAAAP,KACE,GAAIA,KAAKQ,sBAAsBiB,MAC7B,OAAOzB,KAAKQ,sBAAsBiB,MAAMS,OAAM,SAACC,GAC7C,OAA4F,IAA5FA,EAAO5B,EAAKC,sBAAsBc,aAAac,cAAcC,QAAQJ,EAAIG,kBAI/ErC,EAAAI,UAAA0B,YAAA,WAAA,IAAAtB,EAAAP,KACMyB,EAAQzB,KAAKQ,sBAAsBiB,MACvC,GAAIA,GAASzB,KAAKQ,sBAAuB,KACnC8B,EAASb,EAAMc,KAAI,SAACR,GAAQ,OAAAA,EAAKxB,EAAKC,sBAAsBgC,mBAAqBjC,EAAKC,sBAAsBoB,eAChH5B,KAAKS,WAAWO,IAAIhB,KAAKW,OAAO8B,SAASH,KAI7CvC,EAAAI,UAAAuC,iBAAA,SAAiBzC,GACfD,KAAKC,UAAU0C,KAAK1C,wBArEvB2C,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,mBACVC,SAAA,g0BAOCC,EAAAA,0BACAA,EAAAA,qBACAA,EAAAA,yBACAC,EAAAA,UA2DHlD,EA7EA,GCAAmD,EAAA,WAOA,SAAAA,KAakC,2BAbjCC,EAAAA,SAAQN,KAAA,CAAC,CACRO,aAAc,CAACrD,GACfsD,QAAS,CACPC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,oBACAC,EAAAA,gBACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,uBAEFC,QAAS,CAAC9D,OAEsBmD,EApBlC","sourcesContent":["import { Component, OnInit, Input, SimpleChanges, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { GenericoAutoComplete } from '../../modelos/genericoAutocomplete';\r\n\r\n@Component({\r\n  selector: 'lib-autocomplete',\r\n  templateUrl: './autocomplete.component.html',\r\n  styleUrls: ['./autocomplete.component.css']\r\n})\r\nexport class AutocompleteComponent implements OnInit {\r\n\r\n  constructor(\r\n  ) { }\r\n  @Input() genericoAutocompletar: GenericoAutoComplete;\r\n  @Input() formulario: FormGroup;\r\n  @Input() label: string;\r\n  @Output() seleccion = new EventEmitter<any>();\r\n  requerido: boolean;\r\n  DatosFiltrados: Observable<any[]>;\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['genericoAutocompletar']) {\r\n      if (this.genericoAutocompletar) {\r\n        if(this.formulario.controls[this.label].validator(this.formulario.controls[this.label])){\r\n          this.requerido = this.formulario.controls[this.label].validator(this.formulario.controls[this.label]).required;\r\n        }else{\r\n          this.requerido = false\r\n        }\r\n        \r\n        this.DatosFiltrados = this.formulario.get(this.label).valueChanges.pipe(\r\n          startWith<string | any>(''),\r\n          map(value => typeof value === 'string' ? value : value[this.genericoAutocompletar.datoMostrar]),\r\n          map(Nombre => Nombre ? this.filtrarDato(Nombre) : this.genericoAutocompletar.datos)\r\n        );\r\n\r\n        if (this.genericoAutocompletar) {\r\n          if(this.genericoAutocompletar.deshabilitar === true){\r\n            this.formulario.controls[this.label].disable();\r\n          }\r\n        }\r\n        \r\n        if (this.genericoAutocompletar && this.genericoAutocompletar.idPrecargado) {\r\n          this.filtrarData();\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  mostrarDato(dato?: any): string | undefined {\r\n    return dato ? dato[this.genericoAutocompletar.datoMostrar] : undefined;\r\n  }\r\n\r\n  filtrarDato(val: string): any[] {\r\n    if (this.genericoAutocompletar.datos) {\r\n      return this.genericoAutocompletar.datos.filter(option =>\r\n        option[this.genericoAutocompletar.datoMostrar].toLowerCase().indexOf(val.toLowerCase()) === 0);\r\n    }\r\n  }\r\n\r\n  filtrarData() {\r\n    let datos = this.genericoAutocompletar.datos;\r\n    if (datos && this.genericoAutocompletar) {\r\n      let cargar = datos.find(dato => dato[this.genericoAutocompletar.filtroPrecargado] == this.genericoAutocompletar.idPrecargado);\r\n      this.formulario.get(this.label).setValue(cargar);\r\n    }\r\n  }\r\n\r\n  seleccionoOpcion(seleccion){\r\n    this.seleccion.emit(seleccion);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AutocompleteComponent } from './componentes/autocomplete/autocomplete.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatButtonModule, MatIconModule, MatAutocompleteModule, MatSelectModule, MatInputModule, MatFormFieldModule } from '@angular/material';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [AutocompleteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n  ],\r\n  exports: [AutocompleteComponent]\r\n})\r\nexport class AutocompleteModule { }\r\n"]}